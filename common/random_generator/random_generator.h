#pragma once

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "asl_generator/asl_generator.h"
#include "common_generator/common_generator.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class RandomGenerator
{
private:
    #ifdef __USE_ASL__
    ASLRandomGenerator ASL_rng;
    #endif
    CommonRandomGenerator common_rng;
public:
    template <typename _T>
    void generate_array_of_random_values(_T *_array, long long _size, _T _max_val = RAND_MAX);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "random_generator.hpp"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
