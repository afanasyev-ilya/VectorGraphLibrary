#CUDA_DIR = /usr/local/cuda/
#CUDA_DIR = /usr/local/cuda-10.2
CUDA_DIR = ~/local_cuda/
CUDA_COMPILER = $(CUDA_DIR)/bin/nvcc

# Include paths...
Include_Path = -I $(CUDA_DIR)/include -I ../external_libraries/cub -I ../
Flags = -O2 -w -m64 -std=c++11 -Xptxas -dlcm=ca --expt-extended-lambda -gencode arch=compute_60,code=sm_60 -gencode arch=compute_70,code=sm_70 -Xcompiler -fopenmp

# Library paths...
Library_Path = -L $(CUDA_DIR)/lib -L $(CUDA_DIR)/lib64
Libraries = -lcudart -lcudadevrt -lcudadevrt -Xcompiler -fopenmp

.DEFAULT_GOAL := all

##########
# binaries
##########

all: install sssp

sssp: create_folders sssp.o
	$(CUDA_COMPILER) object_files/sssp.o $(Library_Path) $(Libraries) -o ./bin/sssp

##########
# CPPs
##########

install:
	if [ ! -d ../external_libraries/cub ];then\
                        git clone https://github.com/NVlabs/cub ../external_libraries/cub;\
                fi
	if [ ! -d ../external_libraries/moderngpu ];then\
                        git clone https://www.github.com/moderngpu/moderngpu ../external_libraries/moderngpu;\
                fi

sssp.o: sssp/sssp.cu
	$(CUDA_COMPILER) $(Flags) $(Include_Path) -c sssp/sssp.cu -o object_files/sssp.o

create_folders:
	-mkdir -p ./bin
	-cp graph_library.sh ./bin
	-mkdir -p ./object_files

clean:
	-rm -f object_files/*.o