CXX = g++ #clang++

# Include paths...

# Include paths...
Include_Path = -I ../
Flags = -D __USE_MULTICORE__ -O3 -fopenmp -ftree-vectorize

# Library paths...
Library_Path =
Libraries = -O3 -fopenmp

.DEFAULT_GOAL := all

##########
# binaries
##########

all: sssp sswp sharded_sssp bfs scc pr cc rw hits apsp print_graph_info create_vgl_graphs

sssp: create_folders sssp.o
	$(CXX) object_files/sssp.o $(Library_Path) $(Libraries) -o ./bin/sssp_mc

sswp: create_folders sswp.o
	$(CXX) object_files/sswp.o $(Library_Path) $(Libraries) -o ./bin/sswp_mc

sharded_sssp: create_folders sharded_sssp.o
	$(CXX) object_files/sharded_sssp.o $(Library_Path) $(Libraries) -o ./bin/sharded_sssp_mc

bfs: create_folders bfs.o
	$(CXX) object_files/bfs.o $(Library_Path) $(Libraries) -o ./bin/bfs_mc

scc: create_folders scc.o
	$(CXX) object_files/scc.o $(Library_Path) $(Libraries) -o ./bin/scc_mc

cc: create_folders cc.o
	$(CXX) object_files/cc.o $(Library_Path) $(Libraries) -o ./bin/cc_mc

pr: create_folders pr.o
	$(CXX) object_files/pr.o $(Library_Path) $(Libraries) -o ./bin/pr_mc

rw: create_folders rw.o
	$(CXX) object_files/rw.o $(Library_Path) $(Libraries) -o ./bin/rw_mc

hits: create_folders hits.o
	$(CXX) object_files/hits.o $(Library_Path) $(Libraries) -o ./bin/hits_mc

apsp: create_folders apsp.o
	$(CXX) object_files/apsp.o $(Library_Path) $(Libraries) -o ./bin/apsp_mc

print_graph_info: create_folders print_graph_info.o
	$(CXX) object_files/print_graph_info.o $(Library_Path) $(Libraries) -o ./bin/print_graph_info_mc

create_vgl_graphs: create_folders create_vgl_graphs.o
	$(CXX) object_files/create_vgl_graphs.o $(Library_Path) $(Libraries) -o ./bin/create_vgl_graphs_mc

##########
# CPPs
##########

sssp.o: sssp/sssp.cpp
	$(CXX) $(Flags) $(Include_Path)  -c sssp/sssp.cpp -o object_files/sssp.o

sswp.o: sswp/sswp.cpp
	$(CXX) $(Flags) $(Include_Path)  -c sswp/sswp.cpp -o object_files/sswp.o

sharded_sssp.o: sssp/sharded_sssp.cpp
	$(CXX) $(Flags) $(Include_Path)  -c sssp/sharded_sssp.cpp -o object_files/sharded_sssp.o

bfs.o: bfs/bfs.cpp
	$(CXX) $(Flags) $(Include_Path)  -c bfs/bfs.cpp -o object_files/bfs.o

scc.o: scc/scc.cpp
	$(CXX) $(Flags) $(Include_Path)  -c scc/scc.cpp -o object_files/scc.o

cc.o: cc/cc.cpp
	$(CXX) $(Flags) $(Include_Path)  -c cc/cc.cpp -o object_files/cc.o

pr.o: pr/pr.cpp
	$(CXX) $(Flags) $(Include_Path)  -c pr/pr.cpp -o object_files/pr.o

rw.o: rw/rw.cpp
	$(CXX) $(Flags) $(Include_Path)  -c rw/rw.cpp -o object_files/rw.o

hits.o: hits/hits.cpp
	$(CXX) $(Flags) $(Include_Path)  -c hits/hits.cpp -o object_files/hits.o

apsp.o: apsp/apsp.cpp
	$(CXX) $(Flags) $(Include_Path)  -c apsp/apsp.cpp -o object_files/apsp.o

print_graph_info.o: utilites/print_graph_info.cpp
	$(CXX) $(Flags) $(Include_Path)  -c utilites/print_graph_info.cpp -o object_files/print_graph_info.o

create_vgl_graphs.o: utilites/create_vgl_graphs.cpp
	$(CXX)  $(Flags) $(Include_Path) -c utilites/create_vgl_graphs.cpp -o object_files/create_vgl_graphs.o

create_folders:
	-mkdir -p ./bin
	-cp graph_library.sh ./bin
	-mkdir -p ./object_files

clean:
	-rm -f object_files/*.o
	-rm -f bin/*_mc

#################
# CUDA operations
#################

