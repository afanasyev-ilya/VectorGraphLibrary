CXX = nc++
#CXX = nc++-2.5.1

# Include paths...

# Include paths...
Include_Path =

# Library paths...
Libraries = #-ftrace

# CPU Compiler flags...
CXXFLAGS = -O4 -fopenmp -report-all -proginf -mparallel -mretain-list-vector -DASL_LIB_INT64 -I /opt/nec/ve/nlc/2.0.0/include/ #-ftrace #-mno-vector #-ftrace
LDFLAGS = -fopenmp -report-all -ftrace -lasl_openmp_i64 #-ftrace

#  -floop-normalize -floop-interchange -floop-collapse -mretain-list-vector

.DEFAULT_GOAL := all

##########
# binaries
##########

all: sssp sswp bfs_td bfs_do cc pr apsp mf gather generate_test_data

cc: create_folders cc.o
	$(CXX) object_files/cc.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/cc

sssp: create_folders sssp.o
	$(CXX) object_files/sssp.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/sssp

sswp: create_folders sswp.o
	$(CXX) object_files/sswp.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/sswp

apsp: create_folders apsp.o
	$(CXX) object_files/apsp.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/apsp

bfs: create_folders bfs.o
	$(CXX) object_files/bfs.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/bfs

pr: create_folders pr.o
	$(CXX) object_files/pr.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/pr

mf: create_folders mf.o
	$(CXX) object_files/mf.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/mf

generate_test_data: create_folders generate_test_data.o
	g++ object_files/generate_test_data.o $(Library_Path) $(Libraries) -fopenmp -o ./bin/generate_test_data

analyse_graph: create_folders analyse_graph.o
	$(CXX) object_files/analyse_graph.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/analyse_graph

gather: create_folders gather.o
	$(CXX) object_files/gather.o $(Library_Path) $(Libraries) $(LDFLAGS) -o ./bin/gather

##########
# CPPs
##########

pr.o: pr.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c pr.cpp -o object_files/pr.o -fopenmp

cc.o: cc.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c cc.cpp -o object_files/cc.o -fopenmp

sssp.o: sssp.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c sssp.cpp -o object_files/sssp.o -fopenmp

apsp.o: apsp.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c apsp.cpp -o object_files/apsp.o -fopenmp

sswp.o: sswp.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c sswp.cpp -o object_files/sswp.o -fopenmp

bfs.o: bfs.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c bfs.cpp -o object_files/bfs.o -fopenmp

gather.o: gather.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c gather.cpp -o object_files/gather.o -fopenmp

mf.o: mf.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c mf.cpp -o object_files/mf.o -fopenmp
	
custom_test.o: ../misc/custom_test.cpp
	$(CXX) $(CXXFLAGS) $(Include_Path)  -c custom_test.cpp -o object_files/custom_test.o -fopenmp

generate_test_data.o: generate_test_data.cpp
	g++ -std=c++11 -fpermissive $(Include_Path) -c generate_test_data.cpp -o object_files/generate_test_data.o -fopenmp

analyse_graph.o: analyse_graph.cpp
	$(CXX)  $(CXXFLAGS) $(Include_Path) -c analyse_graph.cpp -o object_files/analyse_graph.o -fopenmp

create_folders:
	-mkdir -p ./bin
	-cp graph_library.sh ./bin
	-mkdir -p ./object_files

clean:
	-rm -f object_files/*.o

#################
# CUDA operations
#################

