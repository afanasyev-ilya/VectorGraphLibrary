VE_CXX = nc++
VH_CXX = g++

ifeq ($(MPI), true)
VE_CXX = mpinc++
MPI_Flags= -D __USE_MPI__
BinSuffix=_mpi
endif

# Include paths...

# Include paths...
Include_Path = -I /opt/nec/ve/nlc/2.0.0/include/ -I ../
Flags = -D __USE_NEC_SX_AURORA__ $(MPI_Flags) -O3 -fopenmp -proginf -mparallel -mretain-list-vector -DASL_LIB_INT64 #-report-all #-mno-vector #-ftrace

# Library paths...
Library_Path =
Libraries = -fopenmp -ftrace -lasl_openmp_i64 # -report-all -ftrace
#  -floop-normalize -floop-interchange -floop-collapse -mretain-list-vector

.DEFAULT_GOAL := all

##########
# binaries
##########

all: sssp sssp_sharded sswp bfs scc pr cc rw hits apsp coloring print_graph_info create_vgl_graphs

sssp: create_folders sssp.o
	$(VE_CXX) object_files/sssp.o $(Library_Path) $(Libraries) -o ./bin/sssp_sx$(BinSuffix)

sswp: create_folders sswp.o
	$(VE_CXX) object_files/sswp.o $(Library_Path) $(Libraries) -o ./bin/sswp_sx$(BinSuffix)

sssp_sharded: create_folders sssp_sharded.o
	$(VE_CXX) object_files/sssp_sharded.o $(Library_Path) $(Libraries) -o ./bin/sssp_sharded_sx$(BinSuffix)

bfs: create_folders bfs.o
	$(VE_CXX) object_files/bfs.o $(Library_Path) $(Libraries) -o ./bin/bfs_sx$(BinSuffix)

scc: create_folders scc.o
	$(VE_CXX) object_files/scc.o $(Library_Path) $(Libraries) -o ./bin/scc_sx$(BinSuffix)

cc: create_folders cc.o
	$(VE_CXX) object_files/cc.o $(Library_Path) $(Libraries) -o ./bin/cc_sx$(BinSuffix)

pr: create_folders pr.o
	$(VE_CXX) object_files/pr.o $(Library_Path) $(Libraries) -o ./bin/pr_sx$(BinSuffix)

rw: create_folders rw.o
	$(VE_CXX) object_files/rw.o $(Library_Path) $(Libraries) -o ./bin/rw_sx$(BinSuffix)

hits: create_folders hits.o
	$(VE_CXX) object_files/hits.o $(Library_Path) $(Libraries) -o ./bin/hits_sx$(BinSuffix)

apsp: create_folders apsp.o
	$(VE_CXX) object_files/apsp.o $(Library_Path) $(Libraries) -o ./bin/apsp_sx$(BinSuffix)

coloring: create_folders coloring.o
	$(VE_CXX) object_files/coloring.o $(Library_Path) $(Libraries) -o ./bin/coloring_sx$(BinSuffix)

print_graph_info: create_folders print_graph_info.o
	$(VE_CXX) object_files/print_graph_info.o $(Library_Path) $(Libraries) -o ./bin/print_graph_info_sx$(BinSuffix)

create_vgl_graphs: create_folders create_vgl_graphs.o
	$(VH_CXX) -fopenmp object_files/create_vgl_graphs.o -o ./bin/create_vgl_graphs_sx$(BinSuffix)

csr_test: create_folders csr_test.o
	$(VE_CXX) object_files/csr_test.o $(Library_Path) $(Libraries) -o ./bin/csr_test_sx$(BinSuffix)

##########
# CPPs
##########

sssp.o: sssp/sssp.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c sssp/sssp.cpp -o object_files/sssp.o

sswp.o: sswp/sswp.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c sswp/sswp.cpp -o object_files/sswp.o

sssp_sharded.o: sssp/sssp_sharded.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c sssp/sssp_sharded.cpp -o object_files/sssp_sharded.o

bfs.o: bfs/bfs.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c bfs/bfs.cpp -o object_files/bfs.o

scc.o: scc/scc.cpp

cc.o: cc/cc.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c cc/cc.cpp -o object_files/cc.o

pr.o: pr/pr.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c pr/pr.cpp -o object_files/pr.o

rw.o: rw/rw.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c rw/rw.cpp -o object_files/rw.o

hits.o: hits/hits.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c hits/hits.cpp -o object_files/hits.o

apsp.o: apsp/apsp.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c apsp/apsp.cpp -o object_files/apsp.o

coloring.o: coloring/coloring.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c coloring/coloring.cpp -o object_files/coloring.o

print_graph_info.o: utilites/print_graph_info.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c utilites/print_graph_info.cpp -o object_files/print_graph_info.o

create_vgl_graphs.o: utilites/create_vgl_graphs.cpp
	$(VH_CXX) $(Include_Path) -D __USE_MULTICORE__ -fopenmp -c utilites/create_vgl_graphs.cpp -o object_files/create_vgl_graphs.o

csr_test.o: misc/csr_test.cpp
	$(VE_CXX) $(Flags) $(Include_Path)  -c misc/csr_test.cpp -o object_files/csr_test.o

create_folders:
	-mkdir -p ./bin
	-cp graph_library.sh ./bin
	-mkdir -p ./object_files

clean:
	-rm -f object_files/*.o
	-rm -f bin/*_sx

#################
# CUDA operations
#################

