#pragma once

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum TraversalDirection {
    SCATTER_TRAVERSAL = 0, // outgoing is always first
    GATHER_TRAVERSAL = 1 // incoming is second
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum EdgesStorageType {
    CSR_STORAGE = 0,
    VE_STORAGE = 1
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum REDUCE_TYPE
{
    REDUCE_SUM = 0,
    REDUCE_MAX = 1,
    REDUCE_MIN = 1,
    REDUCE_AVG = 3
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum FrontierType {
    ALL_ACTIVE_FRONTIER = 2,
    SPARSE_FRONTIER = 1,
    DENSE_FRONTIER = 0
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

string get_frontier_status_string(FrontierType _type)
{
    string status;
    if(_type == ALL_ACTIVE_FRONTIER)
        status = "all active";
    if(_type == SPARSE_FRONTIER)
        status = "sparse";
    if(_type == DENSE_FRONTIER)
        status = "dense";

    return status;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define IN_FRONTIER_FLAG 1
#define NOT_IN_FRONTIER_FLAG 0

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
